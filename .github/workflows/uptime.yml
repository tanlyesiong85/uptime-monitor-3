name: Uptime checks

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install requests

      # Restore the most recent state (latest key matching the prefix)
      - name: Restore uptime state
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .uptime_state
          key: uptime-state-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            uptime-state-${{ github.ref }}-
            uptime-state-

      - name: Run monitor
        env:
          # Monitor one or more URLs (comma-separated)
          URLS: "https://crystalwrap.iconcept-staging.com/, https://insken.iconcept-staging.com/, https://amtel.iconcept-staging.com/"
          TIMEOUT: "10"
          EXPECT: ""                       # optional regex; leave empty to skip content check
          CALLMEBOT_PHONE: ${{ secrets.CALLMEBOT_PHONE }}
          CALLMEBOT_APIKEY: ${{ secrets.CALLMEBOT_APIKEY }}
          STATE_FILE: ".uptime_state/state.json"

          # ---- Behavior you asked for ----
          FAILURE_THRESHOLD: "1"           # ðŸš¨ alert on the FIRST failed check
          REMIND_MIN: "10"                 # ðŸ”” while still DOWN, remind every 10 minutes
        run: python monitor.py

      # Save updated state (even if the monitor step failed)
      - name: Save uptime state
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .uptime_state
          key: uptime-state-${{ github.ref }}-${{ github.run_id }}
